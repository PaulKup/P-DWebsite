# Task ID: 4
# Title: Home Page Implementation
# Status: pending
# Dependencies: 3
# Priority: high
# Description: Develop the home page with Hero, Why Choose Us, Features, and CTA sections.
# Details:
1. Create page component in app/page.tsx:
```typescript
import { Metadata } from 'next';
import HeroSection from '@/components/home/HeroSection';
import WhyChooseUsSection from '@/components/home/WhyChooseUsSection';
import FeaturesSection from '@/components/home/FeaturesSection';
import CTASection from '@/components/home/CTASection';

export const metadata: Metadata = {
  title: 'P&D Web Development',
  description: 'Professional web development services for small businesses',
  // Add OG image metadata
};

export default function HomePage() {
  return (
    <>
      <HeroSection />
      <WhyChooseUsSection />
      <FeaturesSection />
      <CTASection />
    </>
  );
}
```
2. Implement each section component:
   - Hero with headline, subheadline, and CTA button
   - Why Choose Us with cards highlighting benefits
   - Features section showcasing services
   - CTA section with button to contact page
3. Load content from markdown files in `@/docs/copy/`
4. Optimize images using next/image
5. Add animations for enhanced UX (optional)

# Test Strategy:
1. Verify content is correctly loaded from markdown files
2. Test responsive layout at all breakpoints
3. Measure Core Web Vitals (LCP, CLS) to ensure they meet requirements
4. Verify image optimization is working correctly
5. Test all CTAs and links

# Subtasks:
## 1. Implement HeroSection Component [pending]
### Dependencies: None
### Description: Create the hero section component with headline, subheadline, and CTA button that will be displayed at the top of the home page.
### Details:
Create components/home/HeroSection.tsx with:
- Headline and subheadline text loaded from @/docs/copy/hero.md
- Primary CTA button linking to the contact page
- Background with gradient overlay
- Responsive layout using Tailwind classes
- Optimized hero image using next/image with priority loading
- Simple fade-in animation using CSS transitions

Example implementation:
```typescript
import { FC } from 'react';
import Link from 'next/link';
import Image from 'next/image';
import { Button } from '@/components/ui/Button';
import { getMarkdownContent } from '@/lib/markdown';

const HeroSection: FC = async () => {
  const heroContent = await getMarkdownContent('hero.md');
  
  return (
    <section className="relative min-h-[80vh] flex items-center">
      <div className="absolute inset-0 z-0">
        <Image 
          src="/images/hero-background.jpg" 
          alt="" 
          fill 
          priority 
          className="object-cover" 
        />
        <div className="absolute inset-0 bg-gradient-to-r from-brand-900/80 to-brand-800/60" />
      </div>
      <div className="container relative z-10 mx-auto px-4 py-20">
        <div className="max-w-2xl animate-fade-in">
          <h1 className="text-4xl md:text-5xl lg:text-6xl font-bold text-white mb-6">
            {heroContent.title}
          </h1>
          <p className="text-xl md:text-2xl text-white/90 mb-8">
            {heroContent.subtitle}
          </p>
          <Button asChild size="lg">
            <Link href="/contact">{heroContent.ctaText}</Link>
          </Button>
        </div>
      </div>
    </section>
  );
};

export default HeroSection;
```

## 2. Implement WhyChooseUsSection Component [pending]
### Dependencies: None
### Description: Create the 'Why Choose Us' section with cards highlighting the benefits of choosing P&D Web Development.
### Details:
Create components/home/WhyChooseUsSection.tsx with:
- Section title and introduction
- Grid of benefit cards (3-4 cards)
- Each card with icon, title, and description
- Content loaded from @/docs/copy/why-choose-us.md
- Subtle hover effects for cards

Example implementation:
```typescript
import { FC } from 'react';
import { getMarkdownContent } from '@/lib/markdown';
import { Card, CardHeader, CardTitle, CardContent } from '@/components/ui/Card';

interface BenefitProps {
  icon: string;
  title: string;
  description: string;
}

const BenefitCard: FC<BenefitProps> = ({ icon, title, description }) => (
  <Card className="transition-all hover:shadow-md hover:-translate-y-1">
    <CardHeader>
      <div className="w-12 h-12 flex items-center justify-center rounded-full bg-brand-100 text-brand-600 mb-4">
        <span className="text-2xl">{icon}</span>
      </div>
      <CardTitle>{title}</CardTitle>
    </CardHeader>
    <CardContent>
      <p>{description}</p>
    </CardContent>
  </Card>
);

const WhyChooseUsSection: FC = async () => {
  const content = await getMarkdownContent('why-choose-us.md');
  
  return (
    <section className="py-20 bg-sand-50">
      <div className="container mx-auto px-4">
        <div className="text-center mb-12">
          <h2 className="text-3xl md:text-4xl font-bold mb-4">{content.title}</h2>
          <p className="text-lg text-ink-600 max-w-2xl mx-auto">{content.introduction}</p>
        </div>
        
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
          {content.benefits.map((benefit, index) => (
            <BenefitCard 
              key={index}
              icon={benefit.icon}
              title={benefit.title}
              description={benefit.description}
            />
          ))}
        </div>
      </div>
    </section>
  );
};

export default WhyChooseUsSection;
```

## 3. Implement FeaturesSection Component [pending]
### Dependencies: None
### Description: Create the features section showcasing P&D's web development services with alternating text and image layout.
### Details:
Create components/home/FeaturesSection.tsx with:
- Section title and introduction
- Alternating layout of feature descriptions and images
- Content loaded from @/docs/copy/features.md
- Optimized images using next/image
- Subtle reveal animations on scroll (optional)

Example implementation:
```typescript
import { FC } from 'react';
import Image from 'next/image';
import { getMarkdownContent } from '@/lib/markdown';

interface FeatureProps {
  title: string;
  description: string;
  image: string;
  imageAlt: string;
  reverse?: boolean;
}

const FeatureItem: FC<FeatureProps> = ({ title, description, image, imageAlt, reverse = false }) => (
  <div className={`flex flex-col ${reverse ? 'md:flex-row-reverse' : 'md:flex-row'} gap-8 py-12`}>
    <div className="flex-1 flex flex-col justify-center">
      <h3 className="text-2xl font-bold mb-4">{title}</h3>
      <p className="text-ink-700">{description}</p>
    </div>
    <div className="flex-1 relative h-64 md:h-auto rounded-lg overflow-hidden">
      <Image 
        src={image} 
        alt={imageAlt} 
        fill 
        className="object-cover" 
      />
    </div>
  </div>
);

const FeaturesSection: FC = async () => {
  const content = await getMarkdownContent('features.md');
  
  return (
    <section className="py-20">
      <div className="container mx-auto px-4">
        <div className="text-center mb-12">
          <h2 className="text-3xl md:text-4xl font-bold mb-4">{content.title}</h2>
          <p className="text-lg text-ink-600 max-w-2xl mx-auto">{content.introduction}</p>
        </div>
        
        <div className="space-y-8 md:space-y-16">
          {content.features.map((feature, index) => (
            <FeatureItem 
              key={index}
              title={feature.title}
              description={feature.description}
              image={feature.image}
              imageAlt={feature.imageAlt}
              reverse={index % 2 !== 0}
            />
          ))}
        </div>
      </div>
    </section>
  );
};

export default FeaturesSection;
```

## 4. Implement CTASection Component [pending]
### Dependencies: None
### Description: Create the call-to-action section with compelling copy and a button directing users to the contact page.
### Details:
Create components/home/CTASection.tsx with:
- Background with gradient or image
- Compelling headline and subheadline
- CTA button linking to contact page
- Content loaded from @/docs/copy/cta.md
- Visual design that draws attention

Example implementation:
```typescript
import { FC } from 'react';
import Link from 'next/link';
import { Button } from '@/components/ui/Button';
import { getMarkdownContent } from '@/lib/markdown';

const CTASection: FC = async () => {
  const content = await getMarkdownContent('cta.md');
  
  return (
    <section className="py-20 bg-gradient-to-r from-brand-800 to-brand-600 text-white">
      <div className="container mx-auto px-4 text-center">
        <h2 className="text-3xl md:text-4xl font-bold mb-4 max-w-2xl mx-auto">
          {content.title}
        </h2>
        <p className="text-xl text-white/90 mb-8 max-w-xl mx-auto">
          {content.description}
        </p>
        <Button asChild size="lg" variant="secondary">
          <Link href="/contact">{content.buttonText}</Link>
        </Button>
      </div>
    </section>
  );
};

export default CTASection;
```

## 5. Implement Markdown Content Loading Utility [pending]
### Dependencies: 4.1, 4.2, 4.3, 4.4
### Description: Create a utility function to load and parse markdown content from files in the @/docs/copy/ directory for use in the home page sections.
### Details:
Create lib/markdown.ts with:
- Function to load and parse markdown files
- Support for frontmatter metadata
- Error handling for missing files
- Type definitions for content structure
- Cache results to improve performance

Example implementation:
```typescript
import fs from 'fs/promises';
import path from 'path';
import matter from 'gray-matter';
import { cache } from 'react';

const CONTENT_DIR = path.join(process.cwd(), 'docs/copy');

export interface MarkdownContent {
  [key: string]: any;
}

export const getMarkdownContent = cache(async (filename: string): Promise<MarkdownContent> => {
  try {
    const filePath = path.join(CONTENT_DIR, filename);
    const fileContent = await fs.readFile(filePath, 'utf8');
    
    const { data, content } = matter(fileContent);
    
    // Parse nested content if needed based on the file structure
    // This is just an example - adjust based on your markdown structure
    if (filename === 'features.md' && data.features) {
      // If features are defined in frontmatter, use those
      return data;
    } else if (filename === 'why-choose-us.md' && data.benefits) {
      // If benefits are defined in frontmatter, use those
      return data;
    }
    
    // Return combined data from frontmatter and content
    return {
      ...data,
      content
    };
  } catch (error) {
    console.error(`Error loading markdown file ${filename}:`, error);
    return { error: `Failed to load content from ${filename}` };
  }
});

// Create sample markdown files in docs/copy/ directory
export async function createSampleMarkdownFiles() {
  const heroContent = `---
title: Professional Web Development for Small Businesses
subtitle: Custom websites that drive growth and engagement
ctaText: Get Started
---`;
  
  const whyChooseUsContent = `---
title: Why Choose P&D Web Development
introduction: We combine technical expertise with business understanding to deliver websites that work for you.
benefits:
  - icon: ⚡
    title: Fast Performance
    description: Websites optimized for speed and conversion
  - icon: 📱
    title: Mobile-First Design
    description: Responsive layouts that work on all devices
  - icon: 🔍
    title: SEO Optimized
    description: Built with search engines in mind from day one
---`;
  
  const featuresContent = `---
title: Our Services
introduction: We offer end-to-end web development services tailored to your business needs.
features:
  - title: Custom Web Development
    description: Bespoke websites built with modern technologies that perfectly match your brand and business requirements.
    image: /images/custom-development.jpg
    imageAlt: Developer working on custom website code
  - title: E-commerce Solutions
    description: Online stores that drive sales with seamless checkout experiences and powerful inventory management.
    image: /images/ecommerce.jpg
    imageAlt: E-commerce website on multiple devices
  - title: Content Management
    description: Easy-to-use CMS solutions that put you in control of your website content.
    image: /images/cms.jpg
    imageAlt: Content management system interface
---`;
  
  const ctaContent = `---
title: Ready to transform your online presence?
description: Contact us today for a free consultation and quote.
buttonText: Contact Us
---`;
  
  try {
    await fs.mkdir(CONTENT_DIR, { recursive: true });
    await fs.writeFile(path.join(CONTENT_DIR, 'hero.md'), heroContent);
    await fs.writeFile(path.join(CONTENT_DIR, 'why-choose-us.md'), whyChooseUsContent);
    await fs.writeFile(path.join(CONTENT_DIR, 'features.md'), featuresContent);
    await fs.writeFile(path.join(CONTENT_DIR, 'cta.md'), ctaContent);
    console.log('Sample markdown files created successfully');
  } catch (error) {
    console.error('Error creating sample markdown files:', error);
  }
}
```

