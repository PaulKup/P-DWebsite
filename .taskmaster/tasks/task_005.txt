# Task ID: 5
# Title: Services Page Implementation
# Status: pending
# Dependencies: 3
# Priority: medium
# Description: Develop the Services page showcasing P&D's service offerings.
# Details:
1. Create page component in app/services/page.tsx:
```typescript
import { Metadata } from 'next';
import ServicesList from '@/components/services/ServicesList';
import ServiceCTA from '@/components/services/ServiceCTA';

export const metadata: Metadata = {
  title: 'Our Services - P&D Web Development',
  description: 'Explore our web development services for small businesses',
  // Add OG image metadata
};

export default function ServicesPage() {
  return (
    <>
      <section className="container mx-auto py-12">
        <h1 className="text-4xl font-bold mb-8">Our Services</h1>
        <ServicesList />
      </section>
      <ServiceCTA />
    </>
  );
}
```
2. Implement ServicesList component to display services with descriptions
3. Create individual service components with details
4. Add ServiceCTA component to encourage contact
5. Load content from markdown files in `@/docs/copy/`
6. Optimize images using next/image

# Test Strategy:
1. Verify content is correctly loaded from markdown files
2. Test responsive layout at all breakpoints
3. Verify all service details are displayed correctly
4. Test CTA functionality
5. Verify SEO metadata is correctly implemented

# Subtasks:
## 1. Create ServicesList Component [pending]
### Dependencies: None
### Description: Implement the ServicesList component that will display all services with their descriptions, icons, and basic details in a grid or list format.
### Details:
Create a new file at components/services/ServicesList.tsx that fetches and displays service data. Use a grid layout with Tailwind CSS for responsive design. Each service should display an icon, title, short description, and a 'Learn More' link. Implement as follows:

```typescript
import { useState, useEffect } from 'react';
import Link from 'next/link';
import Image from 'next/image';
import { getServicesList } from '@/lib/services';

type Service = {
  id: string;
  title: string;
  description: string;
  icon: string;
  slug: string;
};

export default function ServicesList() {
  const [services, setServices] = useState<Service[]>([]);
  
  useEffect(() => {
    const loadServices = async () => {
      const serviceData = await getServicesList();
      setServices(serviceData);
    };
    
    loadServices();
  }, []);
  
  return (
    <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
      {services.map((service) => (
        <div key={service.id} className="border border-gray-200 rounded-lg p-6 hover:shadow-lg transition-shadow">
          <div className="flex items-center mb-4">
            <Image 
              src={service.icon} 
              alt={`${service.title} icon`} 
              width={48} 
              height={48} 
              className="mr-3"
            />
            <h2 className="text-2xl font-semibold">{service.title}</h2>
          </div>
          <p className="text-gray-600 mb-4">{service.description}</p>
          <Link 
            href={`/services/${service.slug}`} 
            className="text-brand-600 font-medium hover:underline"
          >
            Learn more â†’
          </Link>
        </div>
      ))}
    </div>
  );
}
```

## 2. Implement Service Data Loading Utility [pending]
### Dependencies: None
### Description: Create a utility function to load service data from markdown files in the @/docs/copy/ directory and parse it into structured data for the components.
### Details:
Create a new file at lib/services.ts that provides functions to load and parse service data from markdown files. Use gray-matter to parse frontmatter and markdown content. Implement as follows:

```typescript
import fs from 'fs';
import path from 'path';
import matter from 'gray-matter';

const servicesDirectory = path.join(process.cwd(), 'docs/copy/services');

export type ServiceData = {
  id: string;
  title: string;
  description: string;
  icon: string;
  slug: string;
  content: string;
  features: string[];
  benefits: string[];
};

export async function getServicesList(): Promise<ServiceData[]> {
  // Get file names under /services
  const fileNames = fs.readdirSync(servicesDirectory);
  
  const servicesData = fileNames.map((fileName) => {
    // Remove ".md" from file name to get id
    const id = fileName.replace(/\.md$/, '');
    const slug = id.toLowerCase().replace(/ /g, '-');
    
    // Read markdown file as string
    const fullPath = path.join(servicesDirectory, fileName);
    const fileContents = fs.readFileSync(fullPath, 'utf8');
    
    // Use gray-matter to parse the post metadata section
    const matterResult = matter(fileContents);
    
    // Combine the data
    return {
      id,
      slug,
      title: matterResult.data.title,
      description: matterResult.data.description,
      icon: matterResult.data.icon,
      features: matterResult.data.features || [],
      benefits: matterResult.data.benefits || [],
      content: matterResult.content,
    };
  });
  
  return servicesData;
}

export async function getServiceBySlug(slug: string): Promise<ServiceData | null> {
  const services = await getServicesList();
  return services.find(service => service.slug === slug) || null;
}
```

## 3. Create ServiceCTA Component [pending]
### Dependencies: None
### Description: Implement the ServiceCTA component that will encourage visitors to contact P&D for their service needs with a compelling call-to-action section.
### Details:
Create a new file at components/services/ServiceCTA.tsx that displays a call-to-action section with a heading, description, and contact button. Implement as follows:

```typescript
import Link from 'next/link';

export default function ServiceCTA() {
  return (
    <section className="bg-brand-50 py-16">
      <div className="container mx-auto px-4">
        <div className="max-w-3xl mx-auto text-center">
          <h2 className="text-3xl font-bold mb-4">Ready to Transform Your Online Presence?</h2>
          <p className="text-lg text-gray-700 mb-8">
            Our team of experts is ready to help you achieve your business goals with custom web solutions tailored to your needs.
          </p>
          <div className="flex flex-col sm:flex-row justify-center gap-4">
            <Link 
              href="/contact" 
              className="bg-brand-600 text-white px-6 py-3 rounded-lg font-medium hover:bg-brand-700 transition-colors"
            >
              Get a Free Consultation
            </Link>
            <Link 
              href="/portfolio" 
              className="border border-brand-600 text-brand-600 px-6 py-3 rounded-lg font-medium hover:bg-brand-50 transition-colors"
            >
              View Our Work
            </Link>
          </div>
        </div>
      </div>
    </section>
  );
}
```

## 4. Implement SEO Metadata and OG Images [pending]
### Dependencies: 5.1
### Description: Complete the SEO metadata for the Services page, including Open Graph images and structured data to improve search engine visibility and social sharing.
### Details:
Update the Services page component to include complete metadata including Open Graph images and JSON-LD structured data. Modify app/services/page.tsx as follows:

```typescript
import { Metadata } from 'next';
import ServicesList from '@/components/services/ServicesList';
import ServiceCTA from '@/components/services/ServiceCTA';
import { getServicesList } from '@/lib/services';

export async function generateMetadata(): Promise<Metadata> {
  return {
    title: 'Our Services - P&D Web Development',
    description: 'Explore our professional web development services for small businesses including website design, e-commerce solutions, and SEO optimization.',
    openGraph: {
      title: 'Web Development Services for Small Businesses | P&D',
      description: 'Discover how our web development services can help your small business grow online with custom websites, e-commerce solutions, and digital marketing.',
      images: [
        {
          url: '/images/og/services-og.jpg',
          width: 1200,
          height: 630,
          alt: 'P&D Web Development Services',
        },
      ],
      type: 'website',
    },
    twitter: {
      card: 'summary_large_image',
      title: 'Web Development Services | P&D',
      description: 'Professional web development services tailored for small businesses.',
      images: ['/images/og/services-og.jpg'],
    },
  };
}

export default async function ServicesPage() {
  const services = await getServicesList();
  
  // JSON-LD structured data for services
  const jsonLd = {
    '@context': 'https://schema.org',
    '@type': 'ItemList',
    itemListElement: services.map((service, index) => ({
      '@type': 'ListItem',
      position: index + 1,
      item: {
        '@type': 'Service',
        name: service.title,
        description: service.description,
        url: `https://pandwebdev.com/services/${service.slug}`,
      },
    })),
  };

  return (
    <>
      <script
        type="application/ld+json"
        dangerouslySetInnerHTML={{ __html: JSON.stringify(jsonLd) }}
      />
      <section className="container mx-auto py-12 px-4">
        <h1 className="text-4xl font-bold mb-8">Our Services</h1>
        <p className="text-lg text-gray-700 mb-12 max-w-3xl">
          We offer a comprehensive range of web development services designed to help small businesses establish a strong online presence and achieve their digital goals.
        </p>
        <ServicesList />
      </section>
      <ServiceCTA />
    </>
  );
}```

## 5. Create Service Detail Page Component [pending]
### Dependencies: 5.1, 5.2
### Description: Implement the dynamic service detail page that will display comprehensive information about each individual service when a user clicks 'Learn More'.
### Details:
Create a dynamic route for individual service pages that will display detailed information about each service. Implement the following files:

1. First, create app/services/[slug]/page.tsx:

```typescript
import { Metadata } from 'next';
import Image from 'next/image';
import { notFound } from 'next/navigation';
import { getServiceBySlug, getServicesList } from '@/lib/services';
import ServiceCTA from '@/components/services/ServiceCTA';
import MarkdownContent from '@/components/shared/MarkdownContent';

type Props = {
  params: { slug: string };
};

export async function generateStaticParams() {
  const services = await getServicesList();
  return services.map((service) => ({
    slug: service.slug,
  }));
}

export async function generateMetadata({ params }: Props): Promise<Metadata> {
  const service = await getServiceBySlug(params.slug);
  
  if (!service) {
    return {
      title: 'Service Not Found',
    };
  }
  
  return {
    title: `${service.title} - P&D Web Development`,
    description: service.description,
    openGraph: {
      title: `${service.title} | P&D Web Development Services`,
      description: service.description,
      images: [
        {
          url: '/images/og/services-og.jpg',
          width: 1200,
          height: 630,
          alt: `P&D ${service.title} Service`,
        },
      ],
    },
  };
}

export default async function ServicePage({ params }: Props) {
  const service = await getServiceBySlug(params.slug);
  
  if (!service) {
    notFound();
  }
  
  // JSON-LD structured data for this service
  const jsonLd = {
    '@context': 'https://schema.org',
    '@type': 'Service',
    name: service.title,
    description: service.description,
    provider: {
      '@type': 'Organization',
      name: 'P&D Web Development',
      url: 'https://pandwebdev.com',
    },
  };

  return (
    <>
      <script
        type="application/ld+json"
        dangerouslySetInnerHTML={{ __html: JSON.stringify(jsonLd) }}
      />
      <div className="container mx-auto py-12 px-4">
        <div className="flex items-center mb-8">
          <Image 
            src={service.icon} 
            alt={`${service.title} icon`} 
            width={64} 
            height={64} 
            className="mr-4"
          />
          <h1 className="text-4xl font-bold">{service.title}</h1>
        </div>
        
        <div className="grid grid-cols-1 lg:grid-cols-3 gap-12">
          <div className="lg:col-span-2">
            <MarkdownContent content={service.content} />
          </div>
          
          <div className="lg:col-span-1">
            <div className="bg-gray-50 p-6 rounded-lg mb-8">
              <h2 className="text-2xl font-semibold mb-4">Key Features</h2>
              <ul className="space-y-2">
                {service.features.map((feature, index) => (
                  <li key={index} className="flex items-start">
                    <span className="text-brand-600 mr-2">âœ“</span>
                    <span>{feature}</span>
                  </li>
                ))}
              </ul>
            </div>
            
            <div className="bg-brand-50 p-6 rounded-lg">
              <h2 className="text-2xl font-semibold mb-4">Benefits</h2>
              <ul className="space-y-2">
                {service.benefits.map((benefit, index) => (
                  <li key={index} className="flex items-start">
                    <span className="text-brand-600 mr-2">â†’</span>
                    <span>{benefit}</span>
                  </li>
                ))}
              </ul>
            </div>
          </div>
        </div>
      </div>
      <ServiceCTA />
    </>
  );
}
```

2. Then create a shared markdown content component at components/shared/MarkdownContent.tsx:

```typescript
import ReactMarkdown from 'react-markdown';

type MarkdownContentProps = {
  content: string;
};

export default function MarkdownContent({ content }: MarkdownContentProps) {
  return (
    <div className="prose prose-lg max-w-none">
      <ReactMarkdown>{content}</ReactMarkdown>
    </div>
  );
}
```

